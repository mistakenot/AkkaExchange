﻿akka.persistence{

	journal {
		plugin = "akka.persistence.journal.sqlite"
		sqlite {
		
			# qualified type name of the SQLite persistence journal actor
			class = "Akka.Persistence.Sqlite.Journal.SqliteJournal, Akka.Persistence.Sqlite"

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# connection string used for database access
			connection-string = "Data Source=mydb.db;Version=3;"
			
			# connection string name for .config file used when no connection string has been provided
			# connection-string-name = ""

			# default SQLite commands timeout
			connection-timeout = 30s

			# SQLite table corresponding with persistent journal
			table-name = event_journal
			
			# metadata table
			metadata-table-name = journal_metadata

			# should corresponding journal table be initialized automatically
			auto-initialize = true

			# timestamp provider used for generation of journal entries timestamps
			timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
			
			circuit-breaker {
				max-failures = 5
				call-timeout = 20s
				reset-timeout = 60s
			}
		}
	}

	snapshot-store {
		plugin = "akka.persistence.snapshot-store.sqlite"
		sqlite {
		
			# qualified type name of the SQLite persistence journal actor
			class = "Akka.Persistence.Sqlite.Snapshot.SqliteSnapshotStore, Akka.Persistence.Sqlite"

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# connection string used for database access
			connection-string = "Data Source=mydb.db;Version=3;"

			# connection string name for .config file used when no connection string has been provided
			# connection-string-name = ""

			# default SQLite commands timeout
			connection-timeout = 30s
			
			# SQLite table corresponding with persistent journal
			table-name = snapshot_store

			# should corresponding journal table be initialized automatically
			auto-initialize = true

		}
	}

	query.journal.sql {
	  # Implementation class of the SQL ReadJournalProvider
	  class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
  
	  # Absolute path to the write journal plugin configuration entry that this 
	  # query journal will connect to. 
	  # If undefined (or "") it will connect to the default journal as specified by the
	  # akka.persistence.journal.plugin property.
	  write-plugin = ""
  
	  # The SQL write journal is notifying the query side as soon as things
	  # are persisted, but for efficiency reasons the query side retrieves the events 
	  # in batches that sometimes can be delayed up to the configured `refresh-interval`.
	  refresh-interval = 3s
  
	  # How many events to fetch in one query (replay) and keep buffered until they
	  # are delivered downstreams.
	  max-buffer-size = 100
	}
}